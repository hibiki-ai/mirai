% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/daemons.R
\name{serialization}
\alias{serialization}
\title{Custom Serialization Functions}
\usage{
serialization(
  class,
  sfunc = NULL,
  ufunc = NULL,
  vec = FALSE,
  .compute = "default"
)
}
\arguments{
\item{class}{the class of reference object (as a character string) that these
functions are applied to, e.g. 'ArrowTabular' or 'torch_tensor'.}

\item{sfunc}{a function that accepts a reference object inheriting from
\sQuote{class} (or a list of such objects) and returns a raw vector.}

\item{ufunc}{a function that accepts a raw vector and returns a reference
object (or list of such objects).}

\item{vec}{[default FALSE] whether or not the serialization functions are
vectorized and accept and return a list of reference objects, e.g.
\code{torch::torch_serialize} and \code{torch::torch_load}, or if FALSE
return reference objects individually e.g. \code{arrow::write_to_raw} and
\code{arrow::read_ipc_stream}.}

\item{.compute}{[default 'default'] character value for the compute profile
to use (each compute profile has its own independent set of daemons).}
}
\value{
Invisibly, a list comprising 'fns', class', and 'vec', or else NULL
    if supplied to 'fns'.
}
\description{
Registers custom serialization and unserialization functions for sending and
    receiving reference objects.
}
\details{
Registering new functions replaces any existing registered functions.

    This function may be called prior to or after setting daemons, with the
    registered functions applying across all compute profiles.

    Calling without any arguments returns a list comprising the registered
    values for 'fns', class', and 'vec', or else NULL if not registered.
}
\examples{
# requires setting daemons first
reg <- serialization("test_cls", function(x) serialize(x, NULL), unserialize)
reg

reg <- serialization(NULL)
reg

}
